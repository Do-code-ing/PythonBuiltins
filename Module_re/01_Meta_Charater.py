# 메타 문자
# 원래 그 문자가 가진 뜻이 아닌 특별한 용도로 사용하는 문자
# . ^ $ * + ? { } [ ] \ | ( )

# 문자 클래스 [ ]
# [ ] 사이의 문자들과 매치하겠다는 걸 의미한다.
# 이 사이에는 어떤 문자도 들어갈 수 있다.
# 정규식 [abc]의 의미는 "a,b,c 중 한개의 문자와 매치"를 뜻한다.
# 예를 들어, 문자열 "a", "before", "dude"가 정규식 [abc]와 매치될 때,
#   - "a"는 정규식과 일치하는 문자인 "a"가 있으므로 매치
#   - "before"는 정규식과 일치하는 문자인 "b"가 있으므로 매치
#   - "dude"는 정규식과 일치하는 문자인 "a,b,c" 중 어느 하나도 포함하고 있지 않으므로 매치되지 않음

import re

p = re.match("[abc]", "a")
print(p)
p = re.match("[abc]", "before")
print(p)
p = re.match("[abc]", "dude")
print(p)

# [] 안의 두 문자 사이에 하이픈(-)을 사용하면 두 문자 사이의 범위(from-to)를 의미한다.
# 예를 들어, [a-c]는 [abc]와 동일하다. [0-5]는 [012345]와 동일하다.
#   - [a-zA-Z] : 알파벳 모두
#   - [0-9] : 숫자

# 주의
# [] 안에 메타 문자 ^ 를 사용할 경우 반대라는 의미를 갖는다.
# 예를 들어, [^0-9]는 숫자가 아닌 문자만 매치한다.

# 자주 사용하는 문자 클래스
# \d - 숫자와 매치, [0-9]와 동일한 표현식이다.
# \D - 숫자가 아닌 것과 매치, [^0-9]와 동일한 표현식이다.
# \s - whitespace 문자와 매치, [ \t\n\r\f\v]와 동일한 표현식이다. 맨 앞의 빈 칸은 공백문자(space)를 의미한다.
# \S - whitespace 문자가 아닌 것과 매치, [^ \t\n\r\f\v]와 동일한 표현식이다.
# \w - 문자+숫자(alphanumeric)와 매치, [a-zA-Z0-9_]와 동일한 표현식이다.
# \W - 문자+숫자(alphanumeric)가 아닌 문자와 매치, [^a-zA-Z0-9_]와 동일한 표현식이다.

